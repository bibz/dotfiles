#!/bin/sh

usage() {
    cat <<HEREDOC
$0: install and configure my personal setup

Synopsis:
    $0 all
    $0 <role>...

Roles:
    base: Basic configuration and utilities for my everyday CLI life
    gui: For my everyday GUI life
    dev: Development tools
    pro: Professional (as in, work) environment
    refresh: Refresh the package repositories
HEREDOC
}

refresh() {
    sudo apt update
}

apt_install() {
    sudo DEBIAN_FRONTEND=noninteractive apt install --no-install-recommends --yes $@
}

base() {
    apt_install \
        apt-transport-https \
        command-not-found \
        curl \
        stow \
        wget \
        xz-utils

    stow git
    stow nano
    stow scripts
    stow zsh
}

gui() {
    apt_install \
        keepassxc \
        i3 \
        rxvt-unicode \
        xsel

    stow i3
}

dev() {
    # Sublime: https://www.sublimetext.com/docs/linux_repositories.html#apt
    curl -fsSL https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -
    echo 'deb https://download.sublimetext.com/ apt/stable/' | sudo tee /etc/apt/sources.list.d/sublime-text.list
    refresh

    apt_install \
        build-essential \
        fonts-hack-ttf \
        make \
        sublime-text \
        tig

    # Python build dependencies for pyenv
    apt_install make build-essential libssl-dev zlib1g-dev \
            libbz2-dev libreadline-dev libsqlite3-dev llvm \
            libncursesw5-dev xz-utils tk-dev libxml2-dev \
            libxmlsec1-dev libffi-dev liblzma-dev

    mkdir -p ~/opt

    # pyenv
    PYENV_ROOT=~/opt/pyenv
    checkout 'https://github.com/pyenv/pyenv.git'            "${PYENV_ROOT}"
    checkout 'https://github.com/pyenv/pyenv-doctor.git'     "${PYENV_ROOT}/plugins/pyenv-doctor"
    checkout 'https://github.com/pyenv/pyenv-installer.git'  "${PYENV_ROOT}/plugins/pyenv-installer"
    checkout 'https://github.com/pyenv/pyenv-update.git'     "${PYENV_ROOT}/plugins/pyenv-update"
    checkout 'https://github.com/pyenv/pyenv-virtualenv.git' "${PYENV_ROOT}/plugins/pyenv-virtualenv"
    checkout 'https://github.com/pyenv/pyenv-which-ext.git'  "${PYENV_ROOT}/plugins/pyenv-which-ext"
    ( cd "${PYENV_ROOT}" && src/configure && make -C src )

    # nvm
    NVM_DIR=~/opt/nvm
    checkout 'https://github.com/nvm-sh/nvm.git' "${NVM_DIR}"
    update_to_latest_tag "${NVM_DIR}"

    stow sublime-text-3
}

pro() {
    sudo snap install --classic pycharm-professional
}

checkout() {
    local source_repo
    local target_dir
    source_repo="$1"
    target_dir="$2"

    if [ -d "$2" ]; then
        cd "${target_dir}"

        git fetch --quiet origin
        git pull --quiet 2>/dev/null || true  # Try to pull from upstream if we are not detached

        cd -
    else
        git clone --quiet "${source_repo}" "${target_dir}"
    fi
}

update_to_latest_tag() {
    local working_dir
    local tag
    working_dir="$1"

    cd "${working_dir}"

    git fetch --quiet --tags origin
    tag="$(git describe --abbrev=0 --tags --match "v[0-9]*" $(git rev-list --tags --max-count=1))"
    git checkout --quiet "${tag}"

    cd -
}

if [ $# -eq 0 ]; then
    usage
    exit 0
fi

set -x

if [ $# -eq 1 -a "x$1" = "xall" ]; then
    refresh
    base
    gui
    dev
    pro
    exit 0
fi

while [ $# -gt 0 ]; do
    case $1 in
        base|dev|pro) $1;;
        *) echo "$(usage)" >&2; exit 1;;
    esac
    shift
done
